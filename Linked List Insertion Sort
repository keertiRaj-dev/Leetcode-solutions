//Insertion Sort in Linked List

class Node {
    constructor(value){
        this.value=value;
        this.next=null;
    }
}

class LinkedList {
    constructor(){
        this.head = null;
    }
    
    append(value){
        const newNode = new Node(value)
        if(this.head==null){
            this.head = newNode
        }
        else {
            var current = this.head;
            while(current.next!=null){
                current = current.next
            }
            current.next = newNode
        }
    }
    
    print(){
        var value = ""
        var current = this.head
        while(current!=null){
            value = value + current.value + "->";
            current=current.next
        }
        value = value + "null";
        console.log(value)
    }
    
    insertionSort(){
        if(this.head==null || this.head.next==null){
            return
        }
        else{
        var dummy = new Node(0);
        var current = this.head;
        while(current!=null){
        var nextNode = current.next;
        var prev = dummy;
        while(prev.next!=null && prev.next.value<current.value){
            prev=prev.next;
        }
        current.next = prev.next;
        prev.next = current;
        current = nextNode;
        }
        this.head=dummy;
        }
    }
}

const list = new LinkedList();
list.append(5);
list.append(2);
list.append(4);
list.append(6);
list.print();
list.insertionSort();
list.print();
